(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{90:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(7),a=(r(0),r(95)),i={id:"readme",slug:"/",title:"The IMS Logger",sidebar_label:"Overview"},c={unversionedId:"readme",id:"readme",isDocsHomePage:!1,title:"The IMS Logger",description:"Welcome to the documentation for the IMS Logger!",source:"@site/docs/readme.mdx",slug:"/",permalink:"/imslogger-docs/docs/",editUrl:"https://github.com/IntegratedMillSystems/imslogger-docs/tree/master/docs/readme.mdx",version:"current",sidebar_label:"Overview",sidebar:"rootSidebar",next:{title:"Installing on a Host Machine",permalink:"/imslogger-docs/docs/installing"}},l=[{value:"Architechure",id:"architechure",children:[{value:"Orchestration using Docker-Compose",id:"orchestration-using-docker-compose",children:[]}]}],s={rightToc:l};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Welcome to the documentation for the IMS Logger!"),Object(a.b)("p",null,"The IMS Logger is a stand-alone device that logs and displays data from\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Programmable_logic_controller"}),"Programmable Logic Controllers"),"\n(or PLCs), devices which are commonly used to store sensor data and control\nmachines on factory floors."),Object(a.b)("p",null,"The IMS Logger is designed to be easily installable. It runs on\n, and plug-and-play disk images\nwill be provided, and for those who . It is also designed to be easily accessible."),Object(a.b)("p",null,"In order to recieve data quickly and reliably, it also takes advantage of the\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.odva.org/wp-content/uploads/2020/05/PUB00138R6-Tech-Series-EtherNetIP.pdf"}),"EtherNet/IP Consumer/Producer protocol"),".\nThis allows our device to log data at speeds of up to 1000 data points per second."),Object(a.b)("h2",{id:"architechure"},"Architechure"),Object(a.b)("p",null,"The intent of this project was to run IMS Logger on a\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Raspberry_Pi"}),"Raspberry Pi"),". However, since it is\nbuilt using ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Docker_(software)"}),"Docker"),", the\napplication could theoretically run on any docker-supporting (most likely Unix) device."),Object(a.b)("p",null,"The production build of IMS Logger uses four docker images."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"A standard MongoDB docker image."),Object(a.b)("li",{parentName:"ul"},"A Nginx image for reliably serving the web interface (slightly modified)"),Object(a.b)("li",{parentName:"ul"},"A custom alpine linux image running a python server"),Object(a.b)("li",{parentName:"ul"},"A custom alpine linux image running Django")),Object(a.b)("p",null,"The development build uses all of these except the Nginx image."),Object(a.b)("h3",{id:"orchestration-using-docker-compose"},"Orchestration using Docker-Compose"),Object(a.b)("p",null,"IMS Logger starts and stops using\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.docker.com/compose/"}),"docker-compose"),", a tool which allows the\nconfiguration of multiple docker containers using a ",Object(a.b)("em",{parentName:"p"},"docker-compose.yml")," file."),Object(a.b)("p",null,"The configuration for the production and development builds can found in ",Object(a.b)("em",{parentName:"p"},"./imslogger"),"\nand ",Object(a.b)("em",{parentName:"p"},"./imslogger_dev")," directories (respectively) of the\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/IntegratedMillSystems/imslogger-compose"}),"imslogger-compose"),"\nrepository."))}p.isMDXComponent=!0},95:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),b=n,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return r?o.a.createElement(m,c(c({ref:t},s),{},{components:r})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);