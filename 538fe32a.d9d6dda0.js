(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),s=(n(0),n(95)),c={id:"api",title:"JSON API",sidebar_label:"API"},o={unversionedId:"backend/server/api",id:"backend/server/api",isDocsHomePage:!1,title:"JSON API",description:"The backend server communicates using stringified json. The general format for",source:"@site/docs/backend/server/api.mdx",slug:"/backend/server/api",permalink:"/imslogger-docs/docs/backend/server/api",editUrl:"https://github.com/IntegratedMillSystems/imslogger-docs/tree/master/docs/backend/server/api.mdx",version:"current",sidebar_label:"API",sidebar:"backendSidebar",previous:{title:"The Server",permalink:"/imslogger-docs/docs/backend/server/readme"}},l=[{value:"Requests",id:"requests",children:[{value:"Start",id:"start",children:[]},{value:"Stop",id:"stop",children:[]},{value:"Status",id:"status",children:[]}]},{value:"Responses",id:"responses",children:[{value:"OK",id:"ok",children:[]},{value:"Error",id:"error",children:[]}]}],i={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The backend server communicates using stringified json. The general format for\nrequests is as follows."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "cmd": <command>,\n  "args": {\n    ...\n  }\n}\n')),Object(s.b)("h2",{id:"requests"},"Requests"),Object(s.b)("p",null,"Below is a list of the valid requests."),Object(s.b)("h3",{id:"start"},"Start"),Object(s.b)("p",null,"To start a log, use to following json."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "cmd": "start",\n  "args": {\n    "plc": <plc address>,\n    "tag": <tag name>,\n    "readinterval": <read interval>,\n    "writeinterval": <write interval>\n  }\n}\n')),Object(s.b)("h3",{id:"stop"},"Stop"),Object(s.b)("p",null,"To stop a log, use the following."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "cmd": "stop",\n  "args": {\n    "plc": <plc address>,\n    "tag": <tag name>\n  }\n}\n')),Object(s.b)("h3",{id:"status"},"Status"),Object(s.b)("p",null,"To get the plcs that the server is connected to and the tags it is logging, send\nthis request."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "cmd": "status"\n}\n')),Object(s.b)("p",null,"If the request is completed successfully, the response will be formated as follows."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "status": 200,\n  "plcs": {\n    "172.16.13.200": "172.16.13.200/0", // Represents a pyconpro.PLC instance\n    ...\n  },\n  "logs": {\n    "172.16.13.200": {\n      "test": { // Represents an imslogger.Logger instance\n        "plc": "172.16.13.200/0",\n        "tag": "test",\n        "read": <read interval>,\n        "write": <write interval>\n      },\n      ...\n    },\n    ...\n  }\n}\n')),Object(s.b)("h2",{id:"responses"},"Responses"),Object(s.b)("h3",{id:"ok"},"OK"),Object(s.b)("p",null,"If the server successfully starts or stops a logger, you will recieve this."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "status": 200\n}\n')),Object(s.b)("h3",{id:"error"},"Error"),Object(s.b)("p",null,"If any error for any request is encountered, the server will send the following."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "status": 500,\n  "err": <error message>,\n  "traceback": <traceback>\n}\n')))}u.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),u=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,g=p["".concat(c,".").concat(d)]||p[d]||b[d]||s;return n?a.a.createElement(g,o(o({ref:t},i),{},{components:n})):a.a.createElement(g,o({ref:t},i))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,c=new Array(s);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var i=2;i<s;i++)c[i]=n[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);