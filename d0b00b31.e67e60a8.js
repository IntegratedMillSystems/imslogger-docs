(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return d}));var o=t(3),a=t(7),c=(t(0),t(95)),r={id:"api",title:"API"},p={unversionedId:"backend/pyconpro/api",id:"backend/pyconpro/api",isDocsHomePage:!1,title:"API",description:"pyconpro.Connection",source:"@site/docs/backend/pyconpro/api.md",slug:"/backend/pyconpro/api",permalink:"/imslogger-docs/docs/backend/pyconpro/api",editUrl:"https://github.com/IntegratedMillSystems/imslogger-docs/tree/master/docs/backend/pyconpro/api.md",version:"current"},i=[{value:"pyconpro.Connection",id:"pyconproconnection",children:[{value:"<code>pyconpro.Connection()</code>",id:"pyconproconnection-1",children:[]},{value:"<code>pyconpro.Connection.Start(join=False)</code>",id:"pyconproconnectionstartjoinfalse",children:[]},{value:"<code>pyconpro.Connection.addPLC(ip, slot=0)</code>",id:"pyconproconnectionaddplcip-slot0",children:[]}]},{value:"pyconpro.PLC",id:"pyconproplc",children:[{value:"<code>pyconpro.PLC(connection, ip, slot)</code>",id:"pyconproplcconnection-ip-slot",children:[]},{value:"<code>pyconpro.PLC.register()</code>",id:"pyconproplcregister",children:[]},{value:"<code>pyconpro.PLC.addConsumer(hint, handler, args=(), kwargs={})</code>",id:"pyconproplcaddconsumerhint-handler-args-kwargs",children:[]}]},{value:"pyconpro.Consumer",id:"pyconproconsumer",children:[{value:"<code>pyconpro.Consumer(plc, hint, handler, args=(), kwargs={})</code>",id:"pyconproconsumerplc-hint-handler-args-kwargs",children:[]},{value:"<code>pyconpro.Consumer.forwardOpen()</code>",id:"pyconproconsumerforwardopen",children:[]},{value:"<code>pyconpro.Consumer.Start()</code>",id:"pyconproconsumerstart",children:[]},{value:"<code>pyconpro.Consumer.Stop()</code>",id:"pyconproconsumerstop",children:[]}]},{value:"pyconpro.ConsumerHint (extends typing.NamedTuple)",id:"pyconproconsumerhint-extends-typingnamedtuple",children:[]}],b={rightToc:i};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"pyconproconnection"},"pyconpro.Connection"),Object(c.b)("h3",{id:"pyconproconnection-1"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Connection()")),Object(c.b)("p",null,"Returns a connection object."),Object(c.b)("h3",{id:"pyconproconnectionstartjoinfalse"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Connection.Start(join=False)")),Object(c.b)("h4",{id:"arguments"},"Arguments"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"join"),": If ",Object(c.b)("inlineCode",{parentName:"p"},"true"),", the function will hang until the connection has stopped."),Object(c.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(c.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(c.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(c.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"The ",Object(c.b)("inlineCode",{parentName:"p"},"join")," argument should never really be used. It will be removed soon."))),Object(c.b)("h4",{id:"pyconproconnectionstop"},Object(c.b)("inlineCode",{parentName:"h4"},"pyconpro.Connection.Stop()")),Object(c.b)("p",null,"Should always be called at the end of a program."),Object(c.b)("h3",{id:"pyconproconnectionaddplcip-slot0"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Connection.addPLC(ip, slot=0)")),Object(c.b)("p",null,"Returns a ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.PLC")," object."),Object(c.b)("h4",{id:"arguments-1"},"Arguments"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"ip"),": The IP address of the PLC."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"slot"),": The slot of the PLC (usually ",Object(c.b)("inlineCode",{parentName:"p"},"0"),"). Default is ",Object(c.b)("inlineCode",{parentName:"p"},"0"),"."),Object(c.b)("h2",{id:"pyconproplc"},"pyconpro.PLC"),Object(c.b)("h3",{id:"pyconproplcconnection-ip-slot"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.PLC(connection, ip, slot)")),Object(c.b)("p",null,"In most cases, use ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.Connection.addPLC")," instead."),Object(c.b)("h4",{id:"arguments-2"},"Arguments"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"connection"),": A ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.Connection")," object."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"ip"),": The IP address of the PLC"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"slot"),": The slot of the PLC (usualky ",Object(c.b)("inlineCode",{parentName:"p"},"0"),")."),Object(c.b)("h3",{id:"pyconproplcregister"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.PLC.register()")),Object(c.b)("p",null,"Registers a connection with the actual PLC (not the ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro")," object).\nThis must be called if ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.Connection.addPLC")," was not used."),Object(c.b)("h3",{id:"pyconproplcaddconsumerhint-handler-args-kwargs"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.PLC.addConsumer(hint, handler, args=(), kwargs={})")),Object(c.b)("p",null,"Returns a ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.Consumer")," object."),Object(c.b)("h4",{id:"arguments-3"},"Arguments"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"hint"),": A ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.ConsumerHint")," object."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"handler"),": A function to be called when data is recieved.\nThat data (passed as a byte string) should be the first argument of the handler function."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"args"),", ",Object(c.b)("inlineCode",{parentName:"p"},"kwargs"),": Addition arguments and keyword arguments to be passed to the handler."),Object(c.b)("h2",{id:"pyconproconsumer"},"pyconpro.Consumer"),Object(c.b)("h3",{id:"pyconproconsumerplc-hint-handler-args-kwargs"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Consumer(plc, hint, handler, args=(), kwargs={})")),Object(c.b)("p",null,"In most cases, use ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.PLC.addConsumer")," instead."),Object(c.b)("h4",{id:"arguments-4"},"Arguments"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"plc"),": A ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.PLC")," object."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"hint"),": A ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.ConsumerHint")," object."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"handler"),": A function to be called when data is recieved.\nThat data (passed as a byte string) should be the first argument of the handler function."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"args"),", ",Object(c.b)("inlineCode",{parentName:"p"},"kwargs"),": Addition arguments and keyword arguments to be passed to the handler."),Object(c.b)("h3",{id:"pyconproconsumerforwardopen"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Consumer.forwardOpen()")),Object(c.b)("p",null,"Registers a forward open with the PLC.\nThis must be called if ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.PLC.addConsumer")," was not used."),Object(c.b)("h3",{id:"pyconproconsumerstart"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Consumer.Start()")),Object(c.b)("p",null,"Starts a thread asking the PLC to send data."),Object(c.b)("h3",{id:"pyconproconsumerstop"},Object(c.b)("inlineCode",{parentName:"h3"},"pyconpro.Consumer.Stop()")),Object(c.b)("p",null,"Stops asking for data."),Object(c.b)("h2",{id:"pyconproconsumerhint-extends-typingnamedtuple"},"pyconpro.ConsumerHint (extends typing.NamedTuple)"),Object(c.b)("p",null,"A hint for the ",Object(c.b)("inlineCode",{parentName:"p"},"pyconpro.Consumer")," class."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),"pyconpro.ConsumerHint(\n    tag: str\n    datasize: int\n    rpi: int\n    otrpi: int\n)\n")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"tag"),": The tag name"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"datasize"),": The amount of data (in bytes) the Consumer should expect in each response."),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(c.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},Object(c.b)("inlineCode",{parentName:"p"},"datasize")," should the sum of the size of each variable in the tag + 2 for a header."))),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"rpi"),": The interval at which data should be recieved ",Object(c.b)("em",{parentName:"p"},"in milliseconds"),"."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"otrpi"),": The interval at which to keep the connection alive ",Object(c.b)("em",{parentName:"p"},"in milliseconds"),"."),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(c.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"We usually set the ",Object(c.b)("inlineCode",{parentName:"p"},"otrpi")," to ",Object(c.b)("inlineCode",{parentName:"p"},"rpi+100"),"."))))}d.isMDXComponent=!0},95:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return u}));var o=t(0),a=t.n(o);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),d=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},l=function(e){var n=d(e.components);return a.a.createElement(b.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,r=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),l=d(t),m=o,u=l["".concat(r,".").concat(m)]||l[m]||s[m]||c;return t?a.a.createElement(u,p(p({ref:n},b),{},{components:t})):a.a.createElement(u,p({ref:n},b))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,r=new Array(c);r[0]=m;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,r[1]=p;for(var b=2;b<c;b++)r[b]=t[b];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);